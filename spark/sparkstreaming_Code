from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.streaming import *
spark = SparkSession.builder.master("local[*]").appName("test").getOrCreate()
spark.sparkContext.setLogLevel("ERROR")
#creating a rdd
#spark StramingContext is used to create Dstream API (it is used handle streaming data)

scc = StreamingContext(spark.sparkContext,10)
server = "ec2-13-232-149-123.ap-south-1.compute.amazonaws.com"

#create a Dstream that will connect to hostname:port like localhost:9999
#socketTextStram is used to get the from console (terminal) port.

lines = scc.socketTextStream(server,1234)
# socketTextStream .. get data from console (terminal) from *** server port num 1234
#here in aws ec2 security group must enable 1234 port number

# lines.pprint()
#instead of printing i want to process use foreachrdd
def getSparkSessionInstance(sparkConf):
    if ("sparkSessionSingletonInstance" not in globals()):
        globals()["sparkSessionSingletonInstance"] = SparkSession \
            .builder \
            .config(conf=sparkConf) \
            .getOrCreate()
    return globals()["sparkSessionSingletonInstance"]



def process(time, rdd):
    print("========= %s =========" % str(time))
    try:
        # Get the singleton instance of SparkSession
        spark = getSparkSessionInstance(rdd.context.getConf())

        # Convert RDD[String] to RDD[Row] to DataFrame
        df = rdd.map(lambda w:w.split(",")).toDF(["name","age","city"])
        # Creates a temporary view using the DataFrame
        df.createOrReplaceTempView("tab")
        # Do word count on table using SQL and print it
        res = spark.sql("select * from tab")
        res.show()
        res.write.format("jdbc").option("url",'jdbc:sqlserver://sateesh.c07uo2a23um4.ap-south-1.rds.amazonaws.com:1433;databaseName=sample').option("user",'dbuser').option("password",'mspassword').option("dbtable","sparklivedata").option("driver",'com.microsoft.sqlserver.jdbc.SQLServerDriver').save()
    except:
        pass

lines.foreachRDD(process)
scc.start()
scc.awaitTermination()
